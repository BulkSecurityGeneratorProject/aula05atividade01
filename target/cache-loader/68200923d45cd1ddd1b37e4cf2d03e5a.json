{"remainingRequest":"/home/devdevil/myApp/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/devdevil/myApp/node_modules/ts-loader/index.js??ref--9-3!/home/devdevil/myApp/node_modules/angular-router-loader/src/index.js!/home/devdevil/myApp/node_modules/tslint-loader/index.js!/home/devdevil/myApp/src/main/webapp/app/admin/user-management/user-management.route.ts","dependencies":[{"path":"/home/devdevil/myApp/src/main/webapp/app/admin/user-management/user-management.route.ts","mtime":1545344050360},{"path":"/home/devdevil/myApp/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/devdevil/myApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/devdevil/myApp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/devdevil/myApp/node_modules/ts-loader/index.js","mtime":1540965372000},{"path":"/home/devdevil/myApp/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/devdevil/myApp/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar core_2 = require(\"app/core\");\nvar user_management_component_1 = require(\"./user-management.component\");\nvar user_management_detail_component_1 = require(\"./user-management-detail.component\");\nvar user_management_update_component_1 = require(\"./user-management-update.component\");\nvar UserResolve = /** @class */ (function () {\n    function UserResolve(accountService) {\n        this.accountService = accountService;\n    }\n    UserResolve.prototype.canActivate = function () {\n        var _this = this;\n        return this.accountService.identity().then(function (account) { return _this.accountService.hasAnyAuthority(['ROLE_ADMIN']); });\n    };\n    var _a;\n    UserResolve = tslib_1.__decorate([\n        core_1.Injectable({ providedIn: 'root' }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _a : Object])\n    ], UserResolve);\n    return UserResolve;\n}());\nexports.UserResolve = UserResolve;\nvar UserMgmtResolve = /** @class */ (function () {\n    function UserMgmtResolve(service) {\n        this.service = service;\n    }\n    UserMgmtResolve.prototype.resolve = function (route, state) {\n        var id = route.params['login'] ? route.params['login'] : null;\n        if (id) {\n            return this.service.find(id);\n        }\n        return new core_2.User();\n    };\n    var _b;\n    UserMgmtResolve = tslib_1.__decorate([\n        core_1.Injectable({ providedIn: 'root' }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof core_2.UserService !== \"undefined\" && core_2.UserService) === \"function\" ? _b : Object])\n    ], UserMgmtResolve);\n    return UserMgmtResolve;\n}());\nexports.UserMgmtResolve = UserMgmtResolve;\nexports.userMgmtRoute = [\n    {\n        path: 'user-management',\n        component: user_management_component_1.UserMgmtComponent,\n        resolve: {\n            pagingParams: ng_jhipster_1.JhiResolvePagingParams\n        },\n        data: {\n            pageTitle: 'userManagement.home.title',\n            defaultSort: 'id,asc'\n        }\n    },\n    {\n        path: 'user-management/:login/view',\n        component: user_management_detail_component_1.UserMgmtDetailComponent,\n        resolve: {\n            user: UserMgmtResolve\n        },\n        data: {\n            pageTitle: 'userManagement.home.title'\n        }\n    },\n    {\n        path: 'user-management/new',\n        component: user_management_update_component_1.UserMgmtUpdateComponent,\n        resolve: {\n            user: UserMgmtResolve\n        }\n    },\n    {\n        path: 'user-management/:login/edit',\n        component: user_management_update_component_1.UserMgmtUpdateComponent,\n        resolve: {\n            user: UserMgmtResolve\n        }\n    }\n];\n",{"version":3,"file":"/home/devdevil/myApp/src/main/webapp/app/admin/user-management/user-management.route.ts","sourceRoot":"","sources":["/home/devdevil/myApp/node_modules/angular-router-loader/src/index.js!/home/devdevil/myApp/node_modules/tslint-loader/index.js!/home/devdevil/myApp/src/main/webapp/app/admin/user-management/user-management.route.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAE3C,2CAAwE;AAExE,iCAA6D;AAC7D,yEAAgE;AAChE,uFAA6E;AAC7E,uFAA6E;AAG7E;IACE,qBAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEtD,iCAAW,GAAX;QAAA,iBAEC;QADC,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,CAAC,EAAnD,CAAmD,CAAC,CAAC;IAC7G,CAAC;;IALU,WAAW;QADvB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEG,qBAAc,oBAAd,qBAAc;OADvC,WAAW,CAMvB;IAAD,kBAAC;CAAA,AAND,IAMC;AANY,kCAAW;AASxB;IACE,yBAAoB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;IAAG,CAAC;IAE5C,iCAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAC/D,IAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAChE,IAAI,EAAE,EAAE;YACN,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC9B;QACD,OAAO,IAAI,WAAI,EAAE,CAAC;IACpB,CAAC;;IATU,eAAe;QAD3B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEJ,kBAAW,oBAAX,kBAAW;OAD7B,eAAe,CAU3B;IAAD,sBAAC;CAAA,AAVD,IAUC;AAVY,0CAAe;AAYf,QAAA,aAAa,GAAW;IACnC;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,6CAAiB;QAC5B,OAAO,EAAE;YACP,YAAY,EAAE,oCAAsB;SACrC;QACD,IAAI,EAAE;YACJ,SAAS,EAAE,2BAA2B;YACtC,WAAW,EAAE,QAAQ;SACtB;KACF;IACD;QACE,IAAI,EAAE,6BAA6B;QACnC,SAAS,EAAE,0DAAuB;QAClC,OAAO,EAAE;YACP,IAAI,EAAE,eAAe;SACtB;QACD,IAAI,EAAE;YACJ,SAAS,EAAE,2BAA2B;SACvC;KACF;IACD;QACE,IAAI,EAAE,qBAAqB;QAC3B,SAAS,EAAE,0DAAuB;QAClC,OAAO,EAAE;YACP,IAAI,EAAE,eAAe;SACtB;KACF;IACD;QACE,IAAI,EAAE,6BAA6B;QACnC,SAAS,EAAE,0DAAuB;QAClC,OAAO,EAAE;YACP,IAAI,EAAE,eAAe;SACtB;KACF;CACF,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes, CanActivate } from '@angular/router';\nimport { JhiPaginationUtil, JhiResolvePagingParams } from 'ng-jhipster';\n\nimport { AccountService, User, UserService } from 'app/core';\nimport { UserMgmtComponent } from './user-management.component';\nimport { UserMgmtDetailComponent } from './user-management-detail.component';\nimport { UserMgmtUpdateComponent } from './user-management-update.component';\n\n@Injectable({ providedIn: 'root' })\nexport class UserResolve implements CanActivate {\n  constructor(private accountService: AccountService) {}\n\n  canActivate() {\n    return this.accountService.identity().then(account => this.accountService.hasAnyAuthority(['ROLE_ADMIN']));\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class UserMgmtResolve implements Resolve<any> {\n  constructor(private service: UserService) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const id = route.params['login'] ? route.params['login'] : null;\n    if (id) {\n      return this.service.find(id);\n    }\n    return new User();\n  }\n}\n\nexport const userMgmtRoute: Routes = [\n  {\n    path: 'user-management',\n    component: UserMgmtComponent,\n    resolve: {\n      pagingParams: JhiResolvePagingParams\n    },\n    data: {\n      pageTitle: 'userManagement.home.title',\n      defaultSort: 'id,asc'\n    }\n  },\n  {\n    path: 'user-management/:login/view',\n    component: UserMgmtDetailComponent,\n    resolve: {\n      user: UserMgmtResolve\n    },\n    data: {\n      pageTitle: 'userManagement.home.title'\n    }\n  },\n  {\n    path: 'user-management/new',\n    component: UserMgmtUpdateComponent,\n    resolve: {\n      user: UserMgmtResolve\n    }\n  },\n  {\n    path: 'user-management/:login/edit',\n    component: UserMgmtUpdateComponent,\n    resolve: {\n      user: UserMgmtResolve\n    }\n  }\n];\n"]}]}