{"remainingRequest":"/home/devdevil/myApp/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/devdevil/myApp/node_modules/ts-loader/index.js??ref--9-3!/home/devdevil/myApp/node_modules/angular-router-loader/src/index.js!/home/devdevil/myApp/node_modules/tslint-loader/index.js!/home/devdevil/myApp/src/main/webapp/app/account/register/register.component.ts","dependencies":[{"path":"/home/devdevil/myApp/src/main/webapp/app/account/register/register.component.ts","mtime":1545344049600},{"path":"/home/devdevil/myApp/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/devdevil/myApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/devdevil/myApp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/devdevil/myApp/node_modules/ts-loader/index.js","mtime":1540965372000},{"path":"/home/devdevil/myApp/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/devdevil/myApp/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar shared_1 = require(\"app/shared\");\nvar core_2 = require(\"app/core\");\nvar register_service_1 = require(\"./register.service\");\nvar RegisterComponent = /** @class */ (function () {\n    function RegisterComponent(languageService, loginModalService, registerService, elementRef, renderer) {\n        this.languageService = languageService;\n        this.loginModalService = loginModalService;\n        this.registerService = registerService;\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n    }\n    RegisterComponent.prototype.ngOnInit = function () {\n        this.success = false;\n        this.registerAccount = {};\n    };\n    RegisterComponent.prototype.ngAfterViewInit = function () {\n        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#login'), 'focus', []);\n    };\n    RegisterComponent.prototype.register = function () {\n        var _this = this;\n        if (this.registerAccount.password !== this.confirmPassword) {\n            this.doNotMatch = 'ERROR';\n        }\n        else {\n            this.doNotMatch = null;\n            this.error = null;\n            this.errorUserExists = null;\n            this.errorEmailExists = null;\n            this.languageService.getCurrent().then(function (key) {\n                _this.registerAccount.langKey = key;\n                _this.registerService.save(_this.registerAccount).subscribe(function () {\n                    _this.success = true;\n                }, function (response) { return _this.processError(response); });\n            });\n        }\n    };\n    RegisterComponent.prototype.openLogin = function () {\n        this.modalRef = this.loginModalService.open();\n    };\n    RegisterComponent.prototype.processError = function (response) {\n        this.success = null;\n        if (response.status === 400 && response.error.type === shared_1.LOGIN_ALREADY_USED_TYPE) {\n            this.errorUserExists = 'ERROR';\n        }\n        else if (response.status === 400 && response.error.type === shared_1.EMAIL_ALREADY_USED_TYPE) {\n            this.errorEmailExists = 'ERROR';\n        }\n        else {\n            this.error = 'ERROR';\n        }\n    };\n    var _a, _b, _c, _d, _e;\n    RegisterComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-register',\n            templateUrl: './register.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiLanguageService !== \"undefined\" && ng_jhipster_1.JhiLanguageService) === \"function\" ? _a : Object, typeof (_b = typeof core_2.LoginModalService !== \"undefined\" && core_2.LoginModalService) === \"function\" ? _b : Object, typeof (_c = typeof register_service_1.Register !== \"undefined\" && register_service_1.Register) === \"function\" ? _c : Object, typeof (_d = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" ? _d : Object, typeof (_e = typeof core_1.Renderer !== \"undefined\" && core_1.Renderer) === \"function\" ? _e : Object])\n    ], RegisterComponent);\n    return RegisterComponent;\n}());\nexports.RegisterComponent = RegisterComponent;\n",{"version":3,"file":"/home/devdevil/myApp/src/main/webapp/app/account/register/register.component.ts","sourceRoot":"","sources":["/home/devdevil/myApp/node_modules/angular-router-loader/src/index.js!/home/devdevil/myApp/node_modules/tslint-loader/index.js!/home/devdevil/myApp/src/main/webapp/app/account/register/register.component.ts"],"names":[],"mappings":";;;AAAA,sCAAuF;AAGvF,2CAAiD;AAEjD,qCAA8E;AAC9E,iCAA6C;AAC7C,uDAA8C;AAM9C;IAUE,2BACU,eAAmC,EACnC,iBAAoC,EACpC,eAAyB,EACzB,UAAsB,EACtB,QAAkB;QAJlB,oBAAe,GAAf,eAAe,CAAoB;QACnC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oBAAe,GAAf,eAAe,CAAU;QACzB,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAU;IACzB,CAAC;IAEJ,oCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED,2CAAe,GAAf;QACE,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IACxG,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,KAAK,IAAI,CAAC,eAAe,EAAE;YAC1D,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAA,GAAG;gBACxC,KAAI,CAAC,eAAe,CAAC,OAAO,GAAG,GAAG,CAAC;gBACnC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CACvD;oBACE,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACtB,CAAC,EACD,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAA3B,CAA2B,CACxC,CAAC;YACJ,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,qCAAS,GAAT;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAChD,CAAC;IAEO,wCAAY,GAApB,UAAqB,QAA2B;QAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,gCAAuB,EAAE;YAC9E,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;SAChC;aAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,gCAAuB,EAAE;YACrF,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;SACtB;IACH,CAAC;;IA5DU,iBAAiB;QAJ7B,gBAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,2BAA2B;SACzC,CAAC;qEAY2B,gCAAkB,oBAAlB,gCAAkB,oDAChB,wBAAiB,oBAAjB,wBAAiB,oDACnB,2BAAQ,oBAAR,2BAAQ,oDACb,iBAAU,oBAAV,iBAAU,oDACZ,eAAQ,oBAAR,eAAQ;OAfjB,iBAAiB,CA6D7B;IAAD,wBAAC;CAAA,AA7DD,IA6DC;AA7DY,8CAAiB","sourcesContent":["import { Component, OnInit, AfterViewInit, Renderer, ElementRef } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { JhiLanguageService } from 'ng-jhipster';\n\nimport { EMAIL_ALREADY_USED_TYPE, LOGIN_ALREADY_USED_TYPE } from 'app/shared';\nimport { LoginModalService } from 'app/core';\nimport { Register } from './register.service';\n\n@Component({\n  selector: 'jhi-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit, AfterViewInit {\n  confirmPassword: string;\n  doNotMatch: string;\n  error: string;\n  errorEmailExists: string;\n  errorUserExists: string;\n  registerAccount: any;\n  success: boolean;\n  modalRef: NgbModalRef;\n\n  constructor(\n    private languageService: JhiLanguageService,\n    private loginModalService: LoginModalService,\n    private registerService: Register,\n    private elementRef: ElementRef,\n    private renderer: Renderer\n  ) {}\n\n  ngOnInit() {\n    this.success = false;\n    this.registerAccount = {};\n  }\n\n  ngAfterViewInit() {\n    this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#login'), 'focus', []);\n  }\n\n  register() {\n    if (this.registerAccount.password !== this.confirmPassword) {\n      this.doNotMatch = 'ERROR';\n    } else {\n      this.doNotMatch = null;\n      this.error = null;\n      this.errorUserExists = null;\n      this.errorEmailExists = null;\n      this.languageService.getCurrent().then(key => {\n        this.registerAccount.langKey = key;\n        this.registerService.save(this.registerAccount).subscribe(\n          () => {\n            this.success = true;\n          },\n          response => this.processError(response)\n        );\n      });\n    }\n  }\n\n  openLogin() {\n    this.modalRef = this.loginModalService.open();\n  }\n\n  private processError(response: HttpErrorResponse) {\n    this.success = null;\n    if (response.status === 400 && response.error.type === LOGIN_ALREADY_USED_TYPE) {\n      this.errorUserExists = 'ERROR';\n    } else if (response.status === 400 && response.error.type === EMAIL_ALREADY_USED_TYPE) {\n      this.errorEmailExists = 'ERROR';\n    } else {\n      this.error = 'ERROR';\n    }\n  }\n}\n"]}]}