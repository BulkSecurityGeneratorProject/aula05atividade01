{"remainingRequest":"/home/devdevil/myApp/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/devdevil/myApp/node_modules/ts-loader/index.js??ref--9-3!/home/devdevil/myApp/node_modules/angular-router-loader/src/index.js!/home/devdevil/myApp/node_modules/tslint-loader/index.js!/home/devdevil/myApp/src/main/webapp/app/account/settings/settings.component.ts","dependencies":[{"path":"/home/devdevil/myApp/src/main/webapp/app/account/settings/settings.component.ts","mtime":1545344049776},{"path":"/home/devdevil/myApp/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/devdevil/myApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/devdevil/myApp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/devdevil/myApp/node_modules/ts-loader/index.js","mtime":1540965372000},{"path":"/home/devdevil/myApp/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/devdevil/myApp/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar core_2 = require(\"app/core\");\nvar SettingsComponent = /** @class */ (function () {\n    function SettingsComponent(accountService, languageService, languageHelper) {\n        this.accountService = accountService;\n        this.languageService = languageService;\n        this.languageHelper = languageHelper;\n    }\n    SettingsComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.accountService.identity().then(function (account) {\n            _this.settingsAccount = _this.copyAccount(account);\n        });\n        this.languageHelper.getAll().then(function (languages) {\n            _this.languages = languages;\n        });\n    };\n    SettingsComponent.prototype.save = function () {\n        var _this = this;\n        this.accountService.save(this.settingsAccount).subscribe(function () {\n            _this.error = null;\n            _this.success = 'OK';\n            _this.accountService.identity(true).then(function (account) {\n                _this.settingsAccount = _this.copyAccount(account);\n            });\n            _this.languageService.getCurrent().then(function (current) {\n                if (_this.settingsAccount.langKey !== current) {\n                    _this.languageService.changeLanguage(_this.settingsAccount.langKey);\n                }\n            });\n        }, function () {\n            _this.success = null;\n            _this.error = 'ERROR';\n        });\n    };\n    SettingsComponent.prototype.copyAccount = function (account) {\n        return {\n            activated: account.activated,\n            email: account.email,\n            firstName: account.firstName,\n            langKey: account.langKey,\n            lastName: account.lastName,\n            login: account.login,\n            imageUrl: account.imageUrl\n        };\n    };\n    var _a, _b, _c;\n    SettingsComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-settings',\n            templateUrl: './settings.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _a : Object, typeof (_b = typeof ng_jhipster_1.JhiLanguageService !== \"undefined\" && ng_jhipster_1.JhiLanguageService) === \"function\" ? _b : Object, typeof (_c = typeof core_2.JhiLanguageHelper !== \"undefined\" && core_2.JhiLanguageHelper) === \"function\" ? _c : Object])\n    ], SettingsComponent);\n    return SettingsComponent;\n}());\nexports.SettingsComponent = SettingsComponent;\n",{"version":3,"file":"/home/devdevil/myApp/src/main/webapp/app/account/settings/settings.component.ts","sourceRoot":"","sources":["/home/devdevil/myApp/node_modules/angular-router-loader/src/index.js!/home/devdevil/myApp/node_modules/tslint-loader/index.js!/home/devdevil/myApp/src/main/webapp/app/account/settings/settings.component.ts"],"names":[],"mappings":";;;AAAA,sCAAkD;AAClD,2CAAiD;AAEjD,iCAA6D;AAM7D;IAME,2BACU,cAA8B,EAC9B,eAAmC,EACnC,cAAiC;QAFjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAoB;QACnC,mBAAc,GAAd,cAAc,CAAmB;IACxC,CAAC;IAEJ,oCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YACzC,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,UAAA,SAAS;YACzC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAI,GAAJ;QAAA,iBAmBC;QAlBC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CACtD;YACE,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;gBAC7C,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;gBAC5C,IAAI,KAAI,CAAC,eAAe,CAAC,OAAO,KAAK,OAAO,EAAE;oBAC5C,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;iBACnE;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EACD;YACE,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACvB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,uCAAW,GAAX,UAAY,OAAO;QACjB,OAAO;YACL,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,QAAQ,EAAE,OAAO,CAAC,QAAQ;SAC3B,CAAC;IACJ,CAAC;;IApDU,iBAAiB;QAJ7B,gBAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,2BAA2B;SACzC,CAAC;qEAQ0B,qBAAc,oBAAd,qBAAc,oDACb,gCAAkB,oBAAlB,gCAAkB,oDACnB,wBAAiB,oBAAjB,wBAAiB;OAThC,iBAAiB,CAqD7B;IAAD,wBAAC;CAAA,AArDD,IAqDC;AArDY,8CAAiB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { JhiLanguageService } from 'ng-jhipster';\n\nimport { AccountService, JhiLanguageHelper } from 'app/core';\n\n@Component({\n  selector: 'jhi-settings',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n  error: string;\n  success: string;\n  settingsAccount: any;\n  languages: any[];\n\n  constructor(\n    private accountService: AccountService,\n    private languageService: JhiLanguageService,\n    private languageHelper: JhiLanguageHelper\n  ) {}\n\n  ngOnInit() {\n    this.accountService.identity().then(account => {\n      this.settingsAccount = this.copyAccount(account);\n    });\n    this.languageHelper.getAll().then(languages => {\n      this.languages = languages;\n    });\n  }\n\n  save() {\n    this.accountService.save(this.settingsAccount).subscribe(\n      () => {\n        this.error = null;\n        this.success = 'OK';\n        this.accountService.identity(true).then(account => {\n          this.settingsAccount = this.copyAccount(account);\n        });\n        this.languageService.getCurrent().then(current => {\n          if (this.settingsAccount.langKey !== current) {\n            this.languageService.changeLanguage(this.settingsAccount.langKey);\n          }\n        });\n      },\n      () => {\n        this.success = null;\n        this.error = 'ERROR';\n      }\n    );\n  }\n\n  copyAccount(account) {\n    return {\n      activated: account.activated,\n      email: account.email,\n      firstName: account.firstName,\n      langKey: account.langKey,\n      lastName: account.lastName,\n      login: account.login,\n      imageUrl: account.imageUrl\n    };\n  }\n}\n"]}]}