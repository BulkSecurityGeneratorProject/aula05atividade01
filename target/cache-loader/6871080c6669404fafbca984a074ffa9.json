{"remainingRequest":"/home/devdevil/myApp/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/devdevil/myApp/node_modules/ts-loader/index.js??ref--9-3!/home/devdevil/myApp/node_modules/angular-router-loader/src/index.js!/home/devdevil/myApp/node_modules/tslint-loader/index.js!/home/devdevil/myApp/src/main/webapp/app/admin/health/health.component.ts","dependencies":[{"path":"/home/devdevil/myApp/src/main/webapp/app/admin/health/health.component.ts","mtime":1545344050004},{"path":"/home/devdevil/myApp/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/devdevil/myApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/devdevil/myApp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/devdevil/myApp/node_modules/ts-loader/index.js","mtime":1540965372000},{"path":"/home/devdevil/myApp/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/devdevil/myApp/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\nvar health_service_1 = require(\"./health.service\");\nvar health_modal_component_1 = require(\"./health-modal.component\");\nvar JhiHealthCheckComponent = /** @class */ (function () {\n    function JhiHealthCheckComponent(modalService, healthService) {\n        this.modalService = modalService;\n        this.healthService = healthService;\n    }\n    JhiHealthCheckComponent.prototype.ngOnInit = function () {\n        this.refresh();\n    };\n    JhiHealthCheckComponent.prototype.baseName = function (name) {\n        return this.healthService.getBaseName(name);\n    };\n    JhiHealthCheckComponent.prototype.getBadgeClass = function (statusState) {\n        if (statusState === 'UP') {\n            return 'badge-success';\n        }\n        else {\n            return 'badge-danger';\n        }\n    };\n    JhiHealthCheckComponent.prototype.refresh = function () {\n        var _this = this;\n        this.updatingHealth = true;\n        this.healthService.checkHealth().subscribe(function (health) {\n            _this.healthData = _this.healthService.transformHealthData(health);\n            _this.updatingHealth = false;\n        }, function (error) {\n            if (error.status === 503) {\n                _this.healthData = _this.healthService.transformHealthData(error.error);\n                _this.updatingHealth = false;\n            }\n        });\n    };\n    JhiHealthCheckComponent.prototype.showHealth = function (health) {\n        var modalRef = this.modalService.open(health_modal_component_1.JhiHealthModalComponent);\n        modalRef.componentInstance.currentHealth = health;\n        modalRef.result.then(function (result) {\n            // Left blank intentionally, nothing to do here\n        }, function (reason) {\n            // Left blank intentionally, nothing to do here\n        });\n    };\n    JhiHealthCheckComponent.prototype.subSystemName = function (name) {\n        return this.healthService.getSubSystemName(name);\n    };\n    var _a, _b;\n    JhiHealthCheckComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-health',\n            templateUrl: './health.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_bootstrap_1.NgbModal !== \"undefined\" && ng_bootstrap_1.NgbModal) === \"function\" ? _a : Object, typeof (_b = typeof health_service_1.JhiHealthService !== \"undefined\" && health_service_1.JhiHealthService) === \"function\" ? _b : Object])\n    ], JhiHealthCheckComponent);\n    return JhiHealthCheckComponent;\n}());\nexports.JhiHealthCheckComponent = JhiHealthCheckComponent;\n",{"version":3,"file":"/home/devdevil/myApp/src/main/webapp/app/admin/health/health.component.ts","sourceRoot":"","sources":["/home/devdevil/myApp/node_modules/angular-router-loader/src/index.js!/home/devdevil/myApp/node_modules/tslint-loader/index.js!/home/devdevil/myApp/src/main/webapp/app/admin/health/health.component.ts"],"names":[],"mappings":";;;AAAA,sCAAkD;AAClD,2DAAsD;AAEtD,mDAAoD;AACpD,mEAAmE;AAMnE;IAIE,iCAAoB,YAAsB,EAAU,aAA+B;QAA/D,iBAAY,GAAZ,YAAY,CAAU;QAAU,kBAAa,GAAb,aAAa,CAAkB;IAAG,CAAC;IAEvF,0CAAQ,GAAR;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,0CAAQ,GAAR,UAAS,IAAY;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,+CAAa,GAAb,UAAc,WAAW;QACvB,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,OAAO,eAAe,CAAC;SACxB;aAAM;YACL,OAAO,cAAc,CAAC;SACvB;IACH,CAAC;IAED,yCAAO,GAAP;QAAA,iBAeC;QAdC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAE3B,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CACxC,UAAA,MAAM;YACJ,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YACjE,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,EACD,UAAA,KAAK;YACH,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBACxB,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACtE,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,4CAAU,GAAV,UAAW,MAAW;QACpB,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gDAAuB,CAAC,CAAC;QACjE,QAAQ,CAAC,iBAAiB,CAAC,aAAa,GAAG,MAAM,CAAC;QAClD,QAAQ,CAAC,MAAM,CAAC,IAAI,CAClB,UAAA,MAAM;YACJ,+CAA+C;QACjD,CAAC,EACD,UAAA,MAAM;YACJ,+CAA+C;QACjD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,+CAAa,GAAb,UAAc,IAAY;QACxB,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;;IAtDU,uBAAuB;QAJnC,gBAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,WAAW,EAAE,yBAAyB;SACvC,CAAC;qEAKkC,uBAAQ,oBAAR,uBAAQ,oDAAyB,iCAAgB,oBAAhB,iCAAgB;OAJxE,uBAAuB,CAuDnC;IAAD,8BAAC;CAAA,AAvDD,IAuDC;AAvDY,0DAAuB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { JhiHealthService } from './health.service';\nimport { JhiHealthModalComponent } from './health-modal.component';\n\n@Component({\n  selector: 'jhi-health',\n  templateUrl: './health.component.html'\n})\nexport class JhiHealthCheckComponent implements OnInit {\n  healthData: any;\n  updatingHealth: boolean;\n\n  constructor(private modalService: NgbModal, private healthService: JhiHealthService) {}\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n  baseName(name: string) {\n    return this.healthService.getBaseName(name);\n  }\n\n  getBadgeClass(statusState) {\n    if (statusState === 'UP') {\n      return 'badge-success';\n    } else {\n      return 'badge-danger';\n    }\n  }\n\n  refresh() {\n    this.updatingHealth = true;\n\n    this.healthService.checkHealth().subscribe(\n      health => {\n        this.healthData = this.healthService.transformHealthData(health);\n        this.updatingHealth = false;\n      },\n      error => {\n        if (error.status === 503) {\n          this.healthData = this.healthService.transformHealthData(error.error);\n          this.updatingHealth = false;\n        }\n      }\n    );\n  }\n\n  showHealth(health: any) {\n    const modalRef = this.modalService.open(JhiHealthModalComponent);\n    modalRef.componentInstance.currentHealth = health;\n    modalRef.result.then(\n      result => {\n        // Left blank intentionally, nothing to do here\n      },\n      reason => {\n        // Left blank intentionally, nothing to do here\n      }\n    );\n  }\n\n  subSystemName(name: string) {\n    return this.healthService.getSubSystemName(name);\n  }\n}\n"]}]}